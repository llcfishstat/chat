# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Chatroom {
  createdAt: DateTime!
  id: Float!
  media: [MediaEntity!]
  messages: [Message!]
  name: String!
  type: ChatroomType!
  updatedAt: DateTime!
  userIds: [String!]
}

enum ChatroomType {
  Auction
  Private
}

input CreateMediaDto {
  chatroomId: Float!
  filename: String!
  type: MediaType!
  url: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MediaEntity {
  chatroom: Chatroom
  createdAt: DateTime!
  filename: String!
  id: String!
  message: Message
  type: MediaType!
  updatedAt: DateTime!
  url: String!
  userId: String!
}

enum MediaType {
  File
  Photo
  Video
}

type Message {
  chatroom: Chatroom
  content: String!
  createdAt: DateTime!
  id: String!
  media: [MediaEntity!]
  status: MessageStatus!
  updatedAt: DateTime!
  userId: String!
}

enum MessageStatus {
  DeliveredToCloud
  DeliveredToDevice
  Pending
  Seen
  Sent
}

type Mutation {
  addUsersToChatroom(chatroomId: Int!, userIds: [String!]!): Chatroom!
  createChatroom(name: String!, type: ChatroomType!): Chatroom!
  deleteChatroom(chatroomId: Int!): String!
  sendMessage(chatroomId: Int!, content: String!, media: [CreateMediaDto!]!, messageId: String!, status: String!): Message!
  updateMessagesStatus(messageIds: [String!]!, status: String!): [Message!]!
  userStartedTypingMutation(chatroomId: Int!): UserTyping!
  userStoppedTypingMutation(chatroomId: Int!): UserTyping!
}

type Query {
  getChatroomById(chatroomId: Int!): Chatroom!
  getChatroomsForUser(userId: String!): [Chatroom!]!
  getMessagesForChatroom(chatroomId: Int!): [Message!]!
}

type Subscription {
  messageStatusUpdated(userId: String!): [Message!]!
  newMessage(userId: String!): Message
  userStartedTyping(userId: String!): UserTyping
  userStoppedTyping(userId: String!): UserTyping
}

type UserTyping {
  chatroomId: Float!
  userId: String!
}